<!doctype html>
{{define "document"}}
<!-- Main Quill library -->
<script src="//cdn.quilljs.com/1.1.5/quill.js"></script>
<script src="//cdn.quilljs.com/1.1.5/quill.min.js"></script>

<!-- Theme included stylesheets -->
<link href="//cdn.quilljs.com/1.1.5/quill.snow.css" rel="stylesheet">
<link href="//cdn.quilljs.com/1.1.5/quill.bubble.css" rel="stylesheet">


<!-- CKEDITOR LIBRARY -->
<!-- <script src="//cdn.ckeditor.com/4.5.11/standard/ckeditor.js"></script> -->


<!-- Core build with no theme, formatting, non-essential modules -->
<link href="//cdn.quilljs.com/1.1.5/quill.core.css" rel="stylesheet">
<script src="//cdn.quilljs.com/1.1.5/quill.core.js"></script>

<!-- <script>
// Initialize editor with custom theme and modules
var fullEditor = new Quill('#quill-wrapper', {
  modules: {
    'authorship': { authorId: 'galadriel', enabled: true },
    'multi-cursor': true,
    'toolbar': { container: '#full-toolbar' },
    'link-tooltip': true
  },
  theme: 'snow'
});

// Add basic editor's author
var authorship = fullEditor.getModule('authorship');
authorship.addAuthor('gandalf', 'rgba(255,153,51,0.4)');

// Add a cursor to represent basic editor's cursor
var cursorManager = fullEditor.getModule('multi-cursor');
cursorManager.setCursor('gandalf', fullEditor.getLength()-1, 'Gandalf', 'rgba(255,153,51,0.9)');

// Sync basic editor's cursor location
basicEditor.on('selection-change', function(range) {
  if (range) {
    cursorManager.moveCursor('gandalf', range.end);
  }
});

// Update basic editor's content with ours
fullEditor.on('text-change', function(delta, source) {
  if (source === 'user') {
    basicEditor.updateContents(delta);
  }
});

// basicEditor needs authorship module to accept changes from fullEditor's authorship module
basicEditor.addModule('authorship', {
  authorId: 'gandalf',
  color: 'rgba(255,153,51,0.4)'
});

// Update our content with basic editor's
basicEditor.on('text-change', function(delta, source) {
  if (source === 'user') {
    fullEditor.updateContents(delta);
  }
});
</script> -->
<style type = "text/css">

body
{
	font-family: arial, helvetica, freesans, sans-serif;
	font-size: 100%;
	color: #333;
	background-color: #ddd;
}

.box
{
	position: relative;
	width: 45vw;
	padding: 50px;
	margin: 0 auto;
	background-color: #fff;
	-webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
	-moz-box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
	box-shadow: 0 0 5px rgba(0, 0, 0, 0.2), inset 0 0 50px rgba(0, 0, 0, 0.1);
}

.box:before, .box:after
{
	position: absolute;
	width: 40%;
	height: 10px;
	content: ' ';
	left: 12px;
	bottom: 12px;
	background: transparent;
	-webkit-transform: skew(-5deg) rotate(-5deg);
	-moz-transform: skew(-5deg) rotate(-5deg);
	-ms-transform: skew(-5deg) rotate(-5deg);
	-o-transform: skew(-5deg) rotate(-5deg);
	transform: skew(-5deg) rotate(-5deg);
	-webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
	-moz-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
	box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
	z-index: -1;
}

.box:after
{
	left: auto;
	right: 12px;
	-webkit-transform: skew(5deg) rotate(5deg);
	-moz-transform: skew(5deg) rotate(5deg);
	-ms-transform: skew(5deg) rotate(5deg);
	-o-transform: skew(5deg) rotate(5deg);
	transform: skew(5deg) rotate(5deg);
}

h1, h2
{
	font-size: 1.6em;
	font-weight: normal;
	margin: 0;
}

h2
{
	font-size: 1.3em;
	margin-top: 1.5em;
}

#textbox{
  height: 50vh;
  padding: 20px;
  width: 55vw;
  margin:auto;
}



</style>


<div class="box">

{{.Title}}

<br>
<br>

{{.Content}}
</div>

<!-- Include Quill stylesheet -->
<link href="https://cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet">
<form>
<div id =textbox>

<!-- Create the editor container -->
<input name="writingtext" type="hidden">
<input type = "text" name="title" value="Title" id="title">

<div id="editor">
  <p>Hello World!</p>
</div>

</form>


<div class="row">
	<input type="button" value = "YEEEEEAAAHHH" id = "clickMe">Save</input>
</div>

</div>


<!-- <form>
		<textarea name="editor1" id="editor1" rows="10" cols="80">
				This is my textarea to be replaced with CKEditor.
		</textarea>
		<script>
				// Replace the <textarea id="editor1"> with a CKEditor
				// instance, using default configuration.
				CKEDITOR.replace( 'editor1' );
		</script>
</form> -->


<!-- Include the Quill library -->
<script src="https://cdn.quilljs.com/1.0.0/quill.js"></script>

<!-- Initialize Quill editor -->
<script>

document.getElementById("clickMe").onclick = function () { post('/document',{title: document.getElementById("title").value ,note: editor.container.firstChild.innerHTML}); };



var toolbarOptions = [
  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
  ['blockquote', 'code-block', 'video', 'image'],

  [{ 'header': 1 }, { 'header': 2 }],               // custom button values
  [{ 'list': 'ordered'}, { 'list': 'bullet' }],
  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
  [{ 'direction': 'rtl' }],                         // text direction

  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
  [{ 'font': [] }],
  [{ 'align': [] }],

  ['clean']                                         // remove formatting button
];


  var editor = new Quill('#editor', {
    modules: { toolbar: toolbarOptions },
    theme: 'snow'
  });

//submission form
// alert("test")
// document.getElementById("submit").onclick = post('/document',{note: editor.container.firstChild.innerHTML});
//
// var el = document.getElementById("submit");
// if (el.addEventListener)
//     el.addEventListener("click", post('/document',{note: editor.container.firstChild.innerHTML}), false);
// else if (el.attachEvent)
//     el.attachEvent('onclick', post('/document',{note: editor.container.firstChild.innerHTML}));


// 	// Store accumulated changes
// var change = new Delta();
// quill.on('text-change', function(delta) {
//   change = change.compose(delta);
// });
//
// // Save periodically
// setInterval(function() {
//   if (change.length() > 0) {
//     console.log('Saving changes', change);
//     /*
//     Send partial changes
//     $.post('/your-endpoint', {
//       partial: JSON.stringify(change)
//     });
//
//     Send entire document
//     $.post('/your-endpoint', {
//       doc: JSON.stringify(quill.getContents())
//     });
//     */
//     change = new Delta();
//   }
// }, 5*1000);
//
// // Check for unsaved data
// window.onbeforeunload = function() {
//   if (change.length() > 0) {
//     return 'There are unsaved changes. Are you sure you want to leave?';
//   }

function post(path, params, method) {
    method = "post";

    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);

            form.appendChild(hiddenField);
         }
    }

    document.body.appendChild(form);
    form.submit();
}


</script>

{{end}}
